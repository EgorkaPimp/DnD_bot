import logging

from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram import types

from folder_class.ClassFilter import Router
from create_character import start_create_character
from inline_button_handler_commands import start_inline

router = Router.router

@router.message(Command("start"))
async def  cmd_start(message: types.Message):
    logging.warning(f'Enter command \\start')
    user_name = message.from_user.first_name
    user_last_name = message.from_user.last_name
    await message.answer(f'**–ü—Ä–∏–≤–µ—Ç _{user_name} {user_last_name}!_**\n'
                         f'–ú–µ–Ω—è –∑–æ–≤—É—Ç *Pimp* –∏ —ç—Ç–æ –º–æ–π –±–æ—Ç, –æ–Ω —Å–¥–µ–ª–∞–µ—Ç –º–∏—Ä –î–Ω–î –ø—Ä–æ—â–µ.\n'
                         f'–ï—Å–ª–∏ –Ω–∞–π–¥–µ—à—å –±–∞–≥ –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –Ω–∞–ø–∏—Å–∞—Ç—å –æ –Ω–µ–º –Ω–∞ *GIT*!\n\n'
                         f'–ù–µ –º–æ–≥ –±—ã —Ç—ã *–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è?*\n\n'
                         f'–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏ üëáüèª\n'
                         f'\n',
                         parse_mode="Markdown",
                         reply_markup=start_inline()
                         )

@router.message(Command("create_character"))
async def cmd_register(message: types.Message, state: FSMContext):
    logging.warning(f'Enter command \\create_character')
    await start_create_character(message.chat.id, state)

@router.message(Command("set"))
async def cmd_set(message: types.Message):
    await message.answer('123123123')