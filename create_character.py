import logging
from aiogram.fsm.context import FSMContext

from inline_button_handler_commands import class_inline
from instance_bot import bot

from ClassFilter import Form

from aiogram import types, Router

router = Router()

async def start_create_character(chat: int, state: FSMContext):
    await bot.send_message(chat_id=chat,
                           text="–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–∏–¥—É–º–∞–π –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:\n"
                                "_–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π –µ–≥–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–º–µ–Ω–∏—Ç—å_üëåüèø",
                         parse_mode="Markdown")
    await state.set_state(Form.waiting_for_name_character)

@router.message(Form.waiting_for_name_character)
async def get_nickname(message: types.Message, state: FSMContext):
    logging.warning(f'Input nickname_character {message.text}')
    await state.clear()
    await message.answer(f'–¢–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∑–æ–≤—É—Ç '
                         f'_{message.text.capitalize()}_\n\n'
                         f'–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ *–ö–ª–∞—Å—Å*'
                         ,parse_mode="Markdown")
    await message.answer("–ö–ª–∞—Å—Å—ã:",
                         reply_markup=class_inline())
